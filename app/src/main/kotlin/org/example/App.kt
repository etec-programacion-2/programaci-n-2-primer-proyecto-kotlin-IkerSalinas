/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example
fun Paso1() {

    println ("Â¡Hola, Kotlin!")

    val nombre = "Iker"
 
    val apellido = "salinas"
 
    val fecha = "22/04"

    println("mi nombre es $nombre $apellido")
 
    println("Hoy es $fecha")
    }
//--------------------------------------------------------------------------------
fun Paso2(){
    val Nombre: String = "Iker"
 
    val edad: Int = 16
 
    val altura: Double = 1.90
 
    val esEstudiante: Boolean = true

    println("Nombre: $Nombre")
 
    println("Edad: $edad")
 
    println("Altura: $altura")
 
    println("Es estudiante: $esEstudiante")
 
    val alto: Double = 2.5
 
    val base: Double = 3.4
 
    val area: Double = alto*base
 
    println("El area del rectangulo es de $area")
    }
//----------------------------------------------------------------------------------
fun esParOImpar(numero: Int): String {
    return when {
        numero % 2 == 0 -> "Par"
        else -> "Impar"
    }
}
fun Paso3 (numero: Int){

    if (numero > 0) {
        println("Es Positivo")
    } else {
        if (numero < 0) {
            println ("Es Negativo")
        } else {
            println("Es 0")
        }
    }
    }
//------------------------------------------------------------------------------------
fun mostrarNumerosConLoops() {
    // Usando for
    println("Usando for:")
    for (i in 1..10) {
        println(i)
    }
    
    // Usando while
    println("\nUsando while:")
    var j = 1
    while (j <= 10) {
        println(j)
        j++
    }
    
    // Usando do-while
    println("\nUsando do-while:")
    var k = 1
    do {
        println(k)
        k++
    } while (k <= 10)
}
//------------------------------------------------------------------------------------
fun Paso4(){
    println("Usando for:")
    for (z in 2..20) {
        when {
        z % 2 == 0 -> println (z)
        }
    }
        println("\nUsando while:")
    var v = 2
    while (v <= 20) {
        if (v % 2 == 0) {
            println (v)
        }
        v++
    }
}



fun main (){
    Paso1()
    Paso2()
    val numero = 6
    println (esParOImpar(numero)) 
    Paso3(numero)
    mostrarNumerosConLoops()
    Paso4()

}
